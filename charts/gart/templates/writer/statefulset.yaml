{{- $kafka_service_name := .Values.kafka.fullnameOverride }}
{{- $kafka_service_port := int .Values.kafka.service.ports.client }}
{{- $kafka_service := printf "%s:%d" $kafka_service_name $kafka_service_port }}

{{- $etcd_service_name := .Values.etcd.fullnameOverride }}
{{- $etcd_service_port := int .Values.etcd.containerPorts.client }}
{{- $etcd_service := printf "%s:%d" $etcd_service_name $etcd_service_port }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gart.writer.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: {{ include "gart.fullname" . }}-gie-executor-service
  replicas: {{ .Values.dataconfig.subgraphNum }}
  selector:
    matchLabels:
      app: writer
  template:
    metadata:
      labels:
        app: writer
    spec:
      volumes:
      - name: shared-socket
        emptyDir: {}
      containers:
      - name: writer
        image: {{ include "gart.writer.image" . }}
        imagePullPolicy: {{ .Values.writer.image.pullPolicy | quote }}
        command: ["/bin/bash", "-c"]
        args:
        - |
          cd /workspace/gart/build &&
          until nc -z {{ $kafka_service_name }} {{ $kafka_service_port }}; do echo waiting for kafka; sleep 5; done &&
          until nc -z {{ $etcd_service_name }} {{ $etcd_service_port }}; do echo waiting for etcd; sleep 5; done &&
          ./gart \
          --db-host ${DB_HOST} \
          --db-port ${DB_PORT} \
          --db-name ${DB_NAME} \
          --db-type ${DB_TYPE} \
          --db-user ${DB_USER} \
          --db-password ${DB_PASSWORD} \
          --v6d-sock ${V6D_SOCKET} \
          --v6d-size ${V6D_SIZE} \
          --etcd-endpoint {{ $etcd_service }} \
          --etcd-prefix ${ETCD_PREFIX} \
          --kafka-server {{ $kafka_service }} \
          --subgraph-num ${SUBGRAPH_NUM} \
          --subgraph-id $((${HOSTNAME##*-} + 0)) \
          --enable-bulkload ${ENABLE_BULKLOAD} \
          --rg-from-etcd true \
          --k8s-mode true \
          --role writer &&
          sleep infinity
        envFrom:
        - configMapRef:
            name: {{ include "gart.configmapName" . }}
        volumeMounts:
        - name: shared-socket
          mountPath: /tmp/shared
      {{- if .Values.analyzer.enabled }}
      - name: analyzer
        image: {{ include "gart.analyzer.image" . }}
        imagePullPolicy: {{ .Values.analyzer.image.pullPolicy | quote }}
        command: ["/bin/bash", "-c"]
        args:
        - |
          cd /workspace/gart/build &&
          sleep infinity
        envFrom:
        - configMapRef:
            name: {{ include "gart.configmapName" . }}
        volumeMounts:
        - name: shared-socket
          mountPath: /tmp/shared
      {{- else }}
      - name: gie-executor
        image: {{ include "gart.gie_executor.image" . }}
        imagePullPolicy: {{ .Values.gie_executor.image.pullPolicy | quote }}
        ports:
        - name: gaia-rpc
          containerPort: {{ .Values.gie_executor.GAIA_RPC_PORT }}
        - name: gaia-engine
          containerPort: {{ .Values.gie_executor.ENGINE_PORT }}
        - name: http-service
          containerPort: {{ .Values.gie_executor.HTTP_SERVICE_PORT }}
        command: ["/bin/bash", "-c"]
        args:
        - |
          echo "subgraph id: $((${HOSTNAME##*-} + 0))" &&
          cd /home/graphscope/GART &&
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib &&
          ./scripts/update_gie_executor_config.py $((${HOSTNAME##*-} + 0)) {{ .Values.dataconfig.subgraphNum }} {{ .Values.gie_executor.GAIA_RPC_PORT }} {{ .Release.Namespace }} {{ include "gart.writer.fullname" . }} {{ include "gart.fullname" . }}-gie-executor-service {{ .Values.gie_executor.ENGINE_PORT}} &&
          sleep infinity
        envFrom:
        - configMapRef:
            name: {{ include "gart.configmapName" . }}
        volumeMounts:
        - name: shared-socket
          mountPath: /tmp/shared
      {{- end }}
          
        
