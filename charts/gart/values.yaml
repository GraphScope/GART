# Default values for gart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# kafka config
kafka:
  kraft:
    enabled: true
  zookeeper:
    enabled: false
  controller:
    replicaCount: 1
    persistence:
      enabled: false
    resources:
      requests:
        cpu: 2
        memory: 4096Mi
      limits:
        cpu: 3
        memory: 4096Mi
  broker:
    replicaCount: 1
    persistence:
      enabled: false
    resources:
      requests:
        cpu: 2
        memory: 4096Mi
      limits:
        cpu: 3
        memory: 4096Mi
    #logPersistence:
    #  enabled: true
    #  existingClaim: gart-pvc 
  fullnameOverride: "gart-release-kafka"
  service:
    ports:
      client: 9092
  persistence:
    enabled: false
  listeners:
    client:
      protocol: PLAINTEXT
    controller:
      protocol: PLAINTEXT
    interbroker:
      protocol: PLAINTEXT
  extraConfig: |
    offsets.topic.replication.factor=1
    transaction.state.log.replication.factor=1
    autoCreateTopicsEnable=true
    
# etcd config
etcd:
  auth:
    rbac:
      create: false
  persistence:
    enabled: false
  fullnameOverride: "gart-release-etcd"
  livenessProbe:
    initialDelaySeconds: 10
  readinessProbe:
    initialDelaySeconds: 10

# debezium config
debezium:
  replicaCount: 1
  image:
    repository: debezium/connect
    tag: 2.7.0.Final
    pullPolicy: IfNotPresent
  containerPort: 8083
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

# converter config
converter:
  replicaCount: 1
  image:
    repository: gart-converter
    tag: latest
    pullPolicy: IfNotPresent
  resources: {}

# writer config
writer:
  replicaCount: 1
  image:
    repository: gart-writer
    tag: latest
    pullPolicy: IfNotPresent
  resources: {}

# analyzer config
analyzer:
  image:
    repository: gart-analyzer
    tag: latest
    pullPolicy: IfNotPresent
  resources: {}

# controller config
controller:
  image:
    repository: gart-controller
    tag: latest
    pullPolicy: IfNotPresent
  #service port
  port: 80
  # container port
  containerPort: 5000
  resources: {}

#gie frontend config
gie_frontend:
  image:
    repository: gart-gie-frontend
    tag: latest
    pullPolicy: IfNotPresent
  replicaCount: 1
  gremlinPort: 8182
  resources: {}

# gie executor config
gie_executor:
  image:
    repository: gart-gie-executor
    tag: latest
    pullPolicy: IfNotPresent
  GAIA_RPC_PORT: 8000
  ENGINE_PORT: 9000
  HTTP_SERVICE_PORT: 5000
  FLASK_PORT: 5000
  resources: {}
    


dataconfig:
  subgraphNum: 2
  dbHost: "127.0.0.1"
  dbPort: "5432"
  dbUser: "dbuser"
  dbPassword: "123456"
  dbType: "postgresql"
  dbName: "ldbc"
  #optional
  v6dSocket: "/tmp/shared/v6d.sock"
  #optional
  v6dSize: "750G"
  #optional
  etcdPrefix: "gart_meta_"
  enableBulkload: 0
  # if you want to need an epoch after a give time interval, set useSecondsPerEpoch to 1.
  # If not set, use logsPerEpoch
  # useSecondsPerEpoch: 1
  logsPerEpoch: 10000
  # secondsPerEpoch: 60
  # if you run GAE task, set useGAE to 1, otherwise run GIE task. Default run GIE task
  useGAE: 0
