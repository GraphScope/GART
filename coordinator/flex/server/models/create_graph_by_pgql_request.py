from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from flex.server.models.base_model import Model
from flex.server import util


class CreateGraphByPgqlRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, description=None, _schema=None):  # noqa: E501
        """CreateGraphByPgqlRequest - a model defined in OpenAPI

        :param name: The name of this CreateGraphByPgqlRequest.  # noqa: E501
        :type name: str
        :param description: The description of this CreateGraphByPgqlRequest.  # noqa: E501
        :type description: str
        :param _schema: The _schema of this CreateGraphByPgqlRequest.  # noqa: E501
        :type _schema: str
        """
        self.openapi_types = {
            'name': str,
            'description': str,
            '_schema': str
        }

        self.attribute_map = {
            'name': 'name',
            'description': 'description',
            '_schema': 'schema'
        }

        self._name = name
        self._description = description
        self.__schema = _schema

    @classmethod
    def from_dict(cls, dikt) -> 'CreateGraphByPgqlRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateGraphByPgqlRequest of this CreateGraphByPgqlRequest.  # noqa: E501
        :rtype: CreateGraphByPgqlRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this CreateGraphByPgqlRequest.


        :return: The name of this CreateGraphByPgqlRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this CreateGraphByPgqlRequest.


        :param name: The name of this CreateGraphByPgqlRequest.
        :type name: str
        """

        self._name = name

    @property
    def description(self) -> str:
        """Gets the description of this CreateGraphByPgqlRequest.


        :return: The description of this CreateGraphByPgqlRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this CreateGraphByPgqlRequest.


        :param description: The description of this CreateGraphByPgqlRequest.
        :type description: str
        """

        self._description = description

    @property
    def _schema(self) -> str:
        """Gets the _schema of this CreateGraphByPgqlRequest.


        :return: The _schema of this CreateGraphByPgqlRequest.
        :rtype: str
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema: str):
        """Sets the _schema of this CreateGraphByPgqlRequest.


        :param _schema: The _schema of this CreateGraphByPgqlRequest.
        :type _schema: str
        """

        self.__schema = _schema
