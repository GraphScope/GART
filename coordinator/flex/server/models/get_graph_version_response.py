from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from flex.server.models.base_model import Model
from flex.server import util


class GetGraphVersionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_time=None, version_id=None):  # noqa: E501
        """GetGraphVersionResponse - a model defined in OpenAPI

        :param creation_time: The creation_time of this GetGraphVersionResponse.  # noqa: E501
        :type creation_time: str
        :param version_id: The version_id of this GetGraphVersionResponse.  # noqa: E501
        :type version_id: str
        """
        self.openapi_types = {
            'creation_time': str,
            'version_id': str
        }

        self.attribute_map = {
            'creation_time': 'creation_time',
            'version_id': 'version_id'
        }

        self._creation_time = creation_time
        self._version_id = version_id

    @classmethod
    def from_dict(cls, dikt) -> 'GetGraphVersionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetGraphVersionResponse of this GetGraphVersionResponse.  # noqa: E501
        :rtype: GetGraphVersionResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_time(self) -> str:
        """Gets the creation_time of this GetGraphVersionResponse.


        :return: The creation_time of this GetGraphVersionResponse.
        :rtype: str
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time: str):
        """Sets the creation_time of this GetGraphVersionResponse.


        :param creation_time: The creation_time of this GetGraphVersionResponse.
        :type creation_time: str
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")  # noqa: E501

        self._creation_time = creation_time

    @property
    def version_id(self) -> str:
        """Gets the version_id of this GetGraphVersionResponse.


        :return: The version_id of this GetGraphVersionResponse.
        :rtype: str
        """
        return self._version_id

    @version_id.setter
    def version_id(self, version_id: str):
        """Sets the version_id of this GetGraphVersionResponse.


        :param version_id: The version_id of this GetGraphVersionResponse.
        :type version_id: str
        """
        if version_id is None:
            raise ValueError("Invalid value for `version_id`, must not be `None`")  # noqa: E501

        self._version_id = version_id
